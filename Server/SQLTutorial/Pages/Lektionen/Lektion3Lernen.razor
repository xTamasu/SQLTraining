@page "/lektion3/lernen"

<Blazorise.Heading Size="HeadingSize.Is1" Margin="Margin.Is3.FromTop">Lektion 3: Tabellen einer Datenbank verbinden - Der Join</Blazorise.Heading>
<h2>INNER JOIN</h2>
<p>Mit dem Join kann man zwei Tabellen aus einer Datenbank zusammenf&uuml;hren.</p>
<p>Daf&uuml;r wird immer ein Datensatz aus der ersten mit einem Datensatz aus der zweiten Tabelle zu einem neuen Datensatz zusammengesetzt. Dies funktioniert allerdings nur, mit Datens&auml;tzen die auch zusammen geh&ouml;ren. Das bedeuetet die Tabellen m&uuml;ssen einen Prim&auml;rschl&uuml;ssel haben, der mit dem Wert des Fremdschl&uuml;ssels &uuml;bereinstimmt.</p>
<div class="img-full-width">
    <img class="img-fluid img-fluid-size-80" src="./img/innerjoin.png" />
</div>
<small><a target="_blank" href="https://www.ionos.de/digitalguide/hosting/hosting-technik/inner-join-erklaerung-und-beispiele/">Quelle: "https://www.ionos.de/digitalguide/hosting/hosting-technik/inner-join-erklaerung-und-beispiele/"</a></small>
<h3>Beispiel:</h3>
<p>Zeigen Sie an, welche Fahrt welchem Bus zugeordnet wurde.&nbsp; Ein Bus kann mehrere Fahrten haben.</p>
<div class="code-block">
    <code>
SELECT Bustyp, Kennzeichen, Baujahr, Reisestart, Reiseziel, FahrtKz, Datum<br />FROM Bus<br />INNER JOIN Fahrt ON Bus.FahrtKz = Fahrt.FahrtKz
    </code>
</div>
<p>Welcher Busfahrer f&auml;hrt die FahrtKz 5?</p>
<div class="code-block">
    <code>
SELECT FahrtKz, Name, Vorname, Personalnummer<br />FROM Fahrt<br />INNER JOIN Fahrer ON Fahrt.Personalnummer = Fahrer.Personalnummer<br />WHERE FahrtKz = 5
    </code>
</div>
<h2>Der Doppel-Join</h2>
<p>Wir k&ouml;nnen die drei Tabellen Fahrer, Fahrt und Bus mit einem Join zwischen Fahrer und Fahrt &uuml;ber das Schl&uuml;sselattribut PersonalNummer und einen weiteren Join zwischen Fahrt und Bus &uuml;ber das Schl&uuml;sselattribut Kennzeichen zu einer Tabelle zusammenf&uuml;hren.</p>
<h3>Beispiel:</h3>
<p>Welcher Fahrer, ist welchem Bus zugeordnet? Ein Fahrer kann auch mehreren Bussen zugeordnet sein.</p>
<div class="code-block">
    <code>
SELECT Name, Vorname, Personalnummer, FahrtKz, Bustyp, Baujahr, Kennzeichen<br />FROM Fahrer<br />INNER JOIN Fahrt ON Fahrer.Personalnummer = Fahrt.Personalnummer<br />INNER JOIN Bus ON Fahrt.Kennzeichen = Bus.Kennzeichen
    </code>
</div>
<h2>Der Triple-Join</h2>
<p>Mit drei Joins k&ouml;nnen wir vier Tabellen der Busunternehmen-Datenbank verbinden.</p>
<div class="img-full-width">
    <img class="img-fluid img-fluid-size-80" src="./img/Sl9YK.gif" />
</div>
<small><a target="_blank" href="https://stackoverflow.com/questions/49257561/sql-how-to-compare-tables-i-e-count-rows-in-joined-tables">Quelle: "https://stackoverflow.com/questions/49257561/sql-how-to-compare-tables-i-e-count-rows-in-joined-tables"</a></small>
<h3>Beispiel:</h3>
<p>Gesucht sind alle Namen (Nachname und Vorname) der Kunden, die einen Bus gebucht haben, der vor dem Jahr 2000 gebaut wurde. Zus&auml;tzlich sollen noch die Anzahl der gebuchten Pl&auml;tze und das Baujahr ausgegeben werden.</p>
<p></p>
<div class="code-block">
    <code>
SELECT Nachname, Vorname, GebuchtePl&auml;tze, Baujahr <br />FROM Kunde K<br />INNER JOIN Bucht O ON O.KundenNr = K.KundenNr<br />INNER JOIN Fahrt F ON F.FahrtNr = O.FahrtNr<br />INNER JOIN Bus B ON F.Kennzeichen = B.Kennzeichen<br />WHERE Baujahr &lt; 2000<br />ORDER BY Nachname
    </code>
</div>
@code {

}
